
function genOverlayPythonScript(foldpath, tf)

    if ~isfile(join([foldpath,'\tmp_img\',num2str(tf),'-MRICSIOverlayGen.py'],''))
        % Generate Macros ImageJ script
        fil = fopen(join([foldpath,'\tmp_img\',num2str(tf),'-MRICSIOverlayGen.py'],''), 'w');
        % fil = fopen([pDIC,'\',ident,'-UNETSegmentation.py'], 'w');
        
        fprintf(fil, ['from PIL import Image \n',...
        'import numpy as np \n',...
        'import matplotlib.pyplot as plt \n']);
    
        fprintf(fil, ['img = Image.open(r''', strrep( foldpath , '\' , '/' ) , 'tmp_img/SpectraTimePoint_',num2str(tf),'.png'') \n']);
        fprintf(fil, ['imgMRI = Image.open(r''', strrep( foldpath , '\' , '/' ) , 'tmp_img/MRICut.png'') \n']);
    
        fprintf(fil, ['img = img.convert("RGBA") \n',...
                      'datas = img.getdata() \n',...
                      'newData = [] \n',...
                      'for item in datas: \n',...
                      '    if item[0] == 255 and item[1] == 255 and item[2] == 255: \n',...
                      '        newData.append((255, 255, 255, 0)) \n',...
                      '    else: \n',...
                      '        newData.append(item) \n',...
                      'img.putdata(newData) \n']);
    
        fprintf(fil, ['plt.figure(figsize=(8,8)) \n',...
                      'plt.subplot(1, 1, 1) \n',...
                      'plt.imshow(imgMRI.resize([i*4 for i in np.shape(imgMRI)]), cmap=''gray'') \n',...
                      'plt.imshow(img.resize([i*4 for i in np.shape(imgMRI)])) \n',...
                      'plt.xticks([]) \n',...
                      'plt.yticks([]) \n']);
    
        fprintf(fil, ['plt.savefig(r''', strrep( foldpath , '\' , '/' ) , 'tmp_img/MRICSIOverlay_',num2str(tf),'.png'', bbox_inches=''tight'', pad_inches=0) \n']);
    
        fclose(fil);

    end
end